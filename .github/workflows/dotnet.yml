name: .NET 9.0 Windows Release

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup .NET 9.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore Dependencies
        run: dotnet restore Pulsar.sln

      - name: Build Client
        run: dotnet build Pulsar.Client/Pulsar.Client.csproj --configuration Release --no-restore

      - name: Publish Server
        run: dotnet publish Pulsar.Server/Pulsar.Server.csproj --configuration Release --output "./publish/server" --no-restore

      - name: Prepare Build Output
        run: |
          New-Item -ItemType Directory -Path "./build_output" -Force
          # Copy published server files
          Copy-Item -Path "./publish/server/*" -Destination "./build_output/" -Recurse -Force
          # Copy client as client.bin - check both possible locations
          if (Test-Path "./bin/Release/net9.0-windows/client.bin") {
            Copy-Item -Path "./bin/Release/net9.0-windows/client.bin" -Destination "./build_output/client.bin" -Force
            Write-Host "Copied client.bin from net9.0-windows directory"
          } elseif (Test-Path "./bin/Release/net472/Client.exe") {
            Copy-Item -Path "./bin/Release/net472/Client.exe" -Destination "./build_output/client.bin" -Force
            Write-Host "Copied Client.exe from net472 directory as client.bin"
          } else {
            Write-Host "Warning: Client executable not found in expected locations"
          }
        shell: pwsh

      - name: Zip Build Output
        run: Compress-Archive -Path "./build_output/*" -DestinationPath "build_output.zip"
        shell: pwsh

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build_output.zip

        # delete
      - name: Delete old AutoBuild release
        uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          tag_name: AutoBuild
          delete_release: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      # we need release
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: AutoBuild
          release_name: AutoBuild
          body: "Automated Build Release"
          draft: false
          prerelease: false

      # upload
      - name: Upload Release Asset (build_output.zip)
        id: upload-release-asset-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build_output.zip
          asset_name: build_output.zip
          asset_content_type: application/octet-stream